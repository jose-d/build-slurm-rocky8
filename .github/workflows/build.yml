---

# almost working docker version here: https://gist.github.com/jose-d/c69ea72ee8eea1d54fddb60da52c7bc1

name: release
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: workflow_dispatch
env:
  IMG_REPO_URL: ghcr.io/jose-d/build-slurm-rocky8
  APPTAINER_URL: https://github.com/apptainer/apptainer/releases/download/v1.2.4/apptainer_1.2.4_amd64.deb
  APPTAINER_DEB: apptainer_1.2.4_amd64.deb
  PMIX_VERSION: 4.2.7
  SLURM_VERSION: 23.02.6
  
jobs:
  build_base_build-image:
    name: Build base docker image
    runs-on: ubuntu-latest
    steps:
      - name: Create BASEIMAGE_RELTAG and save it into file and github env
        shell: bash
        run: |
          BASEIMAGE_RELTAG="baseimg_$(date +%Y%m%d%H%M%S)"
          echo "BASEIMAGE_RELTAG=${BASEIMAGE_RELTAG}" > build_base_build-image_vars.txt
          echo "BASEIMAGE_RELTAG=${BASEIMAGE_RELTAG}" >> $GITHUB_ENV
          echo "BASEIMAGE_RELTAG=${BASEIMAGE_RELTAG}" >> $GITHUB_STEP_SUMMARY
          
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:.github/dockerfiles/base"
          push: false
          tags: ${{ env.IMG_REPO_URL }}:${{ env.BASEIMAGE_RELTAG }}

      - name: Login to github registry and push image there
        shell: bash
        run: |
          echo ${{ secrets.PACKAGES_SECRET }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          echo $?
          docker push ${IMG_REPO_URL}:${BASEIMAGE_RELTAG}
          
      - name: Upload persistent data form job as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: build_base_build-image_vars.txt
          path: build_base_build-image_vars.txt
      
      - name: Print into step_summary
        run: echo "Pushed into ${IMG_REPO_URL}:${BASEIMAGE_RELTAG}" >> $GITHUB_STEP_SUMMARY

  build_pmix_build-image:
    name: Build pmix build docker image
    runs-on: ubuntu-latest
    needs: build_base_build-image
    steps:
      - name: Download persistent data from build_base_build-image
        uses: actions/download-artifact@v3
        with:
          name: build_base_build-image_vars.txt

      - name: Read persistent data and add them into env, create PMIXIMAGE_RELTAG and save it into file and github env
        run: |
          source build_base_build-image_vars.txt
          echo "BASEIMAGE_RELTAG=${BASEIMAGE_RELTAG}" >> "$GITHUB_ENV"
          PMIXIMAGE_RELTAG="pmiximg_$(date +%Y%m%d%H%M%S)"
          echo "PMIXIMAGE_RELTAG=${PMIXIMAGE_RELTAG}" > build_pmix_build-image_vars.txt
          echo "PMIXIMAGE_RELTAG=${PMIXIMAGE_RELTAG}" >> $GITHUB_ENV
          echo "PMIXIMAGE_RELTAG=${PMIXIMAGE_RELTAG}" >> $GITHUB_STEP_SUMMARY

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:.github/dockerfiles/pmix"
          push: false
          tags: ${{ env.IMG_REPO_URL }}:${{ env.PMIXIMAGE_RELTAG }}
